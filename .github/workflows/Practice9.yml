name: CI/CD - Fullstack Docker App

on:
  push:
    branches: [main]
    paths:
      - 'Practice9_CICD_GitHubActions_FullStack/**'
      - '.github/workflows/ci.yml'
  pull_request:
    branches: [main]
    paths:
      - 'Practice9_CICD_GitHubActions_FullStack/**'
      - '.github/workflows/ci.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: üì¶ Checkout code
      uses: actions/checkout@v3

    - name: üê≥ Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # ----------------------
    # Build Docker Images
    # ----------------------
    - name: üß™ Build Golang API
      run: docker build -f Practice9_CICD_GitHubActions_FullStack/api-golang/dockerfile -t test-golang Practice9_CICD_GitHubActions_FullStack/api-golang

    - name: üß™ Build Node API
      run: docker build -f Practice9_CICD_GitHubActions_FullStack/api-node/dockerfile -t test-node Practice9_CICD_GitHubActions_FullStack/api-node

    - name: üß™ Build React Frontend
      run: docker build -f Practice9_CICD_GitHubActions_FullStack/client-react/dockerfile.dev -t test-react Practice9_CICD_GitHubActions_FullStack/client-react

    # ----------------------
    # Run Unit Tests
    # ----------------------
    - name: üß™ Run Golang tests
      run: |
        cd Practice9_CICD_GitHubActions_FullStack/api-golang
        go test ./...

    - name: üß™ Run Node.js tests with Jest
      run: |
        cd Practice9_CICD_GitHubActions_FullStack/api-node
        npm install
        npm test

    - name: üß™ Build React frontend
      run: |
        cd Practice9_CICD_GitHubActions_FullStack/client-react
        npm install
        npm run build

  # ----------------------
  # Push Docker Images to Docker Hub
  # ----------------------
  # push:
  #   needs: build
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: üì¶ Checkout code
  #     uses: actions/checkout@v3

  #   - name: üîê Log in to Docker Hub
  #     run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

  #   - name: üê≥ Build and push Golang image
  #     run: |
  #       docker build -f Practice9_CICD_GitHubActions_FullStack/api-golang/dockerfile -t hichamshih/practice9-api-golang:latest Practice9_CICD_GitHubActions_FullStack/api-golang
  #       docker push hichamshih/practice9-api-golang:latest

  #   - name: üê≥ Build and push Node image
  #     run: |
  #       docker build -f Practice9_CICD_GitHubActions_FullStack/api-node/dockerfile -t hichamshih/practice9-api-node:latest Practice9_CICD_GitHubActions_FullStack/api-node
  #       docker push hichamshih/practice9-api-node:latest

  #   - name: üê≥ Build and push React image
  #     run: |
  #       docker build -f Practice9_CICD_GitHubActions_FullStack/client-react/dockerfile.prod -t hichamshih/practice9-api-react:latest Practice9_CICD_GitHubActions_FullStack/client-react
  #       docker push hichamshih/practice9-api-react:latest

  # ----------------------
  # Push Docker Images to Docker Hub using tagging and versioning like sha-<commit_hash>, latest, and version(v1.0.0)
  # ----------------------
  push:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Set TAG variables
      id: vars
      run: |
        echo "SHA_TAG=sha-$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        echo "DATE_TAG=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

    - name: Build and push Golang image
      run: |
        docker build -f Practice9_CICD_GitHubActions_FullStack/api-golang/dockerfile \
          -t hichamshih/practice9-api-golang:latest \
          -t hichamshih/practice9-api-golang:${{ env.SHA_TAG }} \
          -t hichamshih/practice9-api-golang:${{ env.DATE_TAG }} \
          Practice9_CICD_GitHubActions_FullStack/api-golang
        docker push hichamshih/practice9-api-golang:latest
        docker push hichamshih/practice9-api-golang:${{ env.SHA_TAG }}
        docker push hichamshih/practice9-api-golang:${{ env.DATE_TAG }}

    - name: Build and push Node image
      run: |
        docker build -f Practice9_CICD_GitHubActions_FullStack/api-node/dockerfile \
          -t hichamshih/practice9-api-node:latest \
          -t hichamshih/practice9-api-node:${{ env.SHA_TAG }} \
          -t hichamshih/practice9-api-node:${{ env.DATE_TAG }} \
          Practice9_CICD_GitHubActions_FullStack/api-node
        docker push hichamshih/practice9-api-node:latest
        docker push hichamshih/practice9-api-node:${{ env.SHA_TAG }}
        docker push hichamshih/practice9-api-node:${{ env.DATE_TAG }}

    - name: Build and push React image
      run: |
        docker build -f Practice9_CICD_GitHubActions_FullStack/client-react/dockerfile.prod \
          -t hichamshih/practice9-api-react:latest \
          -t hichamshih/practice9-api-react:${{ env.SHA_TAG }} \
          -t hichamshih/practice9-api-react:${{ env.DATE_TAG }} \
          Practice9_CICD_GitHubActions_FullStack/client-react
        docker push hichamshih/practice9-api-react:latest
        docker push hichamshih/practice9-api-react:${{ env.SHA_TAG }}
        docker push hichamshih/practice9-api-react:${{ env.DATE_TAG }}
