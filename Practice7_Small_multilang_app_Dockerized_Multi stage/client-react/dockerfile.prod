# ----------------------------------------------- Stage 1: Build the React app (large image)
FROM node:23-alpine AS build

# Set working directory inside the container
WORKDIR /app

# Copy dependency files first (enables Docker layer caching)
COPY package.json package-lock.json ./

# Install production dependencies only using mount cache for faster builds
RUN --mount=type=cache,target=/app/.npm \
    npm set cache /app/.npm && \
    npm ci


# Copy all project files (excluding ones in .dockerignore)
COPY . .

# Build the production-ready static files
RUN npm run build

# ----------------------------------------------------------- Stage 2: Production stage (small image)
FROM nginxinc/nginx-unprivileged:1.23-alpine AS prod
# Copy built React app from the previous stage to the Nginx static directory
COPY --from=build /app/dist/ /usr/share/nginx/html
# Copy Nginx configuration file
COPY nginx.conf /etc/nginx/conf.d/default.conf
# Expose the port your app will run on (you can change this if needed)
EXPOSE 1516

# the Nginx image already runs the server properly so no need to specify CMD or ENTRYPOINT